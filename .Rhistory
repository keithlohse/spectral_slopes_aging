setwd("~/GitHub/spectral_slopes_aging")
setwd("~/GitHub/spectral_slopes_aging")
# let's see what is in the data folder
list.files()
MASTER <- read.csv("./MASTER_EO_and_EC_EEG_KRL.csv",
header = TRUE,na.strings=c("","NA","na"),
stringsAsFactors = TRUE)
head(MASTER)
MASTER$Frontal<-(MASTER$F7+MASTER$F3+MASTER$Fz+MASTER$F4+MASTER$F8)/5
MASTER$Central<-(MASTER$C3+MASTER$Cz+MASTER$C4)/3
MASTER$Parietal<-(MASTER$P3+MASTER$P7+MASTER$Pz+MASTER$P4+MASTER$P8)/5
MASTER$Occipital<-(MASTER$O1+MASTER$Oz+MASTER$O2)/3
DAT1 <- read.csv("./Aging_study_FOOOF_var.csv",
header = TRUE,na.strings=c("","NA","na"),
stringsAsFactors = TRUE)
head(DAT1)
DAT1 <- read.csv("./Aging_study_FOOOF_var.csv",
header = TRUE,na.strings=c("","NA","na"),
stringsAsFactors = TRUE)
head(DAT1)
tail(DAT1)
DAT1$group<-factor(DAT1$group)
summary(DAT1$group)
### Age related differences in Aperiodic slopes
M1 <- lmer(Exponent ~ group*Area+(1|SubID), data = DAT1, REML=FALSE)
# Aging study analysis
## Opening libraries -----------------------------------------------------------
library("lme4"); library("lmerTest"); library("car");
library("psych"); library("mediation"); library("tidyverse");
library("ggdark"); library("patchwork")
### Age related differences in Aperiodic slopes
M1 <- lmer(Exponent ~ group*Area+(1|SubID), data = DAT1, REML=FALSE)
Anova(M1, Type="III")
summary(M1)
Frontal <- subset(DAT1, Area =="Frontal")
Central <- subset(DAT1, Area =="Central")
Parietal <- subset(DAT1, Area =="Parietal")
Occipital  <- subset(DAT1, Area =="Occipital")
### Frontal channel
mod1<- lm(Exponent ~ 1+group, data = Frontal)
summary(mod1)
### Central Channel
mod2<- lm(Exponent ~ 1+group, data = Central)
summary(mod1)
mod3<- lm(Exponent ~ 1+group, data = Parietal)
summary(mod3)
mod4<- lm(Exponent ~ 1+ group, data = Occipital)
summary(mod4)
# Age-related differences in Intercepts
M2 <- lmer(Offset ~ group*Area+(1|SubID), data = DAT1, REML=FALSE)
Anova(M2, Type="III")  ### the difference in slopes between both hemispheres is non-sig
summary(M2)
# Analysis #2: Age Related Differences in the RBANS ----------------------------
list.files()
BEHAVIOR <- read.csv("./RBANS_aging_study_07292021.csv",
header = TRUE,na.strings=c("","NA","na"),
stringsAsFactors = TRUE)
summary(BEHAVIOR$subID)
# Drop subjects who are missing EEG data:
BEHAVIOR <- subset(BEHAVIOR, subID != "ya20")
BEHAVIOR <- subset(BEHAVIOR, subID != "oa22")
# Reliability across RBANS subtest items:
head(BEHAVIOR[,c(7:18)])
psych::alpha(BEHAVIOR[,c(7:18)])
summary(BEHAVIOR$group)
# Reformatting the data for graphing:
df<- BEHAVIOR %>%
select(subID, group, list_learn, story_mem, fig_copy, line_orn, pic_name,
sem_flu, dig_spn, coding, list_rec, list_recog, story_rec, fig_rec, raw_ave)%>%
mutate(raw_ave = raw_ave*100)
head(df)
df<-gather(df, scale, score, list_learn:raw_ave, factor_key=TRUE)
head(df)
summary(df$scale)
SUMMARY<-df %>% group_by(group, scale) %>%
summarize(mean = mean(score, na.rm=TRUE),
std = sd(score, na.rm=TRUE),
count = n(),
ll = mean(score, na.rm=TRUE)-(sd(score, na.rm=TRUE)/sqrt(n()))*qt(0.975, n()-1, lower.tail = TRUE),
ul = mean(score, na.rm=TRUE)+(sd(score, na.rm=TRUE)/sqrt(n()))*qt(0.975, n()-1, lower.tail = TRUE))
write.csv(SUMMARY, "./descriptive group stats.csv")
# Plot of RBANS scores by group and test
scale_names <- c(`list_learn` = "LL", `story_mem` = "SM", `fig_copy` = "FC", `line_orn` = "LO",
`pic_name` = "PN", `sem_flu` = "SF", `dig_spn` = "DS", `coding` = "Code",
`list_rec` = "L Recall", `list_recog` = "L Recog",`story_rec` = "S Recall", `fig_rec` = "F Recall",
`raw_ave` = "Average")
df$Labels <- fct_recode(df$group,
"OA" = "OA",
"YA" = "YA",
"MCI" = "MC")
df$Labels <- fct_relevel(df$Labels, "YA", "OA", "MCI")
summary(df$group)
df_MCI <- subset(df, group == "MC")
df <- subset(df, group != "MC")
# Figure 2: RBANS Subtests
ggplot(df[df$scale != "raw_ave",], aes(x = Labels, y = score)) +
geom_point(aes(fill=Labels), pch=21, size=1, stroke=1, col="black",
position = position_jitterdodge()) +
geom_boxplot(aes(fill=Labels), col="black", alpha=0.2, outlier.shape = NA)+
facet_wrap(~scale, nrow=3, scales="free", labeller = as_labeller((scale_names)))+
scale_x_discrete(name = "Group") +
scale_y_continuous(name = "Subtest Scores")+
scale_fill_grey()+
theme_bw() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
#plot.background = element_rect(fill="grey10"),
#panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
strip.text = element_text(size=16),
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16, color="black"),  # X axis text
axis.text.y=element_text(size=16, color="black"),
legend.title=element_text(size=16, face = "bold"),
legend.text=element_text(size=16),  # X axis text
legend.position = "none")
# T-tests comparing Older and Younger Adults ----
head(BEHAVIOR)
t.test(raw_ave ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less")
t.test(list_learn~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less") #non-sig
t.test(story_mem ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less") #non-sig
t.test(fig_copy  ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less") #non-sig
t.test(raw_ave ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less")
t.test(list_learn~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less") #non-sig
t.test(story_mem ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less") #non-sig
t.test(fig_copy  ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less") #non-sig
t.test(line_orn  ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less") #non-sig
t.test(pic_name  ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less") #non-sig
t.test(sem_flu  ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less")  #non-sig
t.test(dig_spn  ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less")  #non-sig
t.test(coding  ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less") ## sig
t.test(list_rec ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less")## sig
t.test(list_recog  ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less")## sig
t.test(story_rec  ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less") #non-sig
t.test(fig_rec   ~group, BEHAVIOR[BEHAVIOR$group!="MC",], paired=FALSE, var.equal=FALSE, alternative = "less") ## sig
# Showing the relationship between RBANS scores and Frontal Slopes:
BEHAVIOR$Labels <- fct_recode(BEHAVIOR$group,
"OA" = "OA",
"YA" = "YA",
"MCI" = "MC")
BEHAVIOR$Labels <- fct_relevel(BEHAVIOR$Labels, "YA", "OA", "MCI")
BEHAVIOR <- subset(BEHAVIOR, group!="MC")
head(BEHAVIOR)
# Figure 3A: Raw Average
BEHAVIOR$raw_ave <- BEHAVIOR$raw_ave*100
head(BEHAVIOR)
summary(BEHAVIOR$Labels)
fig3A <- ggplot(data = BEHAVIOR, aes(x = Exponent, y = raw_ave)) +
geom_point(aes(fill=Labels), col="black", pch = 21, size = 2) +
stat_smooth(aes(col=Labels, lty=Labels), method="lm", se=FALSE, lwd=1) +
scale_x_continuous(name = "Spectral Slope (Frontal)") +
scale_y_continuous(name = "Normalized Average (%)")+
scale_color_grey(start=0.0, end=0.4)+scale_fill_grey()+
theme_bw() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
#plot.background = element_rect(fill="grey10"),
#panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
strip.text = element_text(size=16),
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16, color="black"),  # X axis text
axis.text.y=element_text(size=16, color="black"),
legend.title=element_text(size=16, face = "bold"),
legend.text=element_text(size=16),  # X axis text
legend.position = "none")
# Figure 3B: Coding
fig3B <- ggplot(data = BEHAVIOR, aes(x = Exponent, y = coding)) +
geom_point(aes(fill=Labels), col="black", pch = 21, size = 2) +
stat_smooth(aes(col=Labels, lty=Labels), method="lm", se=FALSE, lwd=1) +
scale_color_grey(start=0.0, end=0.4)+scale_fill_grey()+
scale_x_continuous(name = "Spectral Slope (Frontal)") +
scale_y_continuous(name = "Coding Score")+
theme_bw() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
#plot.background = element_rect(fill="grey10"),
#panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
strip.text = element_text(size=16),
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16, color="black"),  # X axis text
axis.text.y=element_text(size=16, color="black"),
legend.title=element_text(size=16, face = "bold"),
legend.text=element_text(size=16),  # X axis text
legend.position = "none")
# Figure 3C: List Recall
fig3C <- ggplot(data = BEHAVIOR, aes(x = Exponent, y = list_rec)) +
geom_point(aes(fill=Labels), col="black", pch = 21, size = 2) +
stat_smooth(aes(col=Labels, lty=Labels), method="lm", se=FALSE, lwd=1) +
scale_x_continuous(name = "Spectral Slope (Frontal)") +
scale_y_continuous(name = "List Recall Score")+
scale_color_grey(start=0.0, end=0.4)+scale_fill_grey()+
theme_bw() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
#plot.background = element_rect(fill="grey10"),
#panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
strip.text = element_text(size=16),
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16, color="black"),  # X axis text
axis.text.y=element_text(size=16, color="black"),
legend.title=element_text(size=16, face = "bold"),
legend.text=element_text(size=16),  # X axis text
legend.position = "none")
# Figure 3D: List Recognition
fig3D <- ggplot(data = BEHAVIOR, aes(x = Exponent, y = list_recog)) +
geom_point(aes(fill=Labels), col="black", pch = 21, size = 2) +
stat_smooth(aes(col=Labels, lty=Labels), method="lm", se=FALSE, lwd=1) +
scale_x_continuous(name = "Spectral Slope (Frontal)") +
scale_y_continuous(name = "List Recognition Score")+
scale_color_grey(start=0.0, end=0.4)+scale_fill_grey()+
theme_bw() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
#plot.background = element_rect(fill="grey10"),
#panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
strip.text = element_text(size=16),
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16, color="black"),  # X axis text
axis.text.y=element_text(size=16, color="black"),
legend.title=element_text(size=16, face = "bold"),
legend.text=element_text(size=16),  # X axis text
legend.position = "none")
# Figure 3E: Figure Recall
fig3E <- ggplot(data = BEHAVIOR, aes(x = Exponent, y = fig_rec)) +
geom_point(aes(fill=Labels), col="black", pch = 21, size = 2) +
stat_smooth(aes(col=Labels, lty=Labels), method="lm", se=FALSE, lwd=1) +
scale_x_continuous(name = "Spectral Slope (Frontal)") +
scale_y_continuous(name = "List Recognition Score")+
scale_color_grey(start=0.0, end=0.4)+scale_fill_grey()+
theme_bw() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
#plot.background = element_rect(fill="grey10"),
#panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
strip.text = element_text(size=16),
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16, color="black"),  # X axis text
axis.text.y=element_text(size=16, color="black"),
legend.title=element_text(size=16, face = "bold"),
legend.text=element_text(size=16),  # X axis text
legend.position = "none")
(fig3A|fig3B|fig3C)
fig3A <- ggplot(data = BEHAVIOR, aes(x = Exponent, y = raw_ave)) +
geom_point(aes(fill=Labels), col="black", pch = 21, size = 2) +
stat_smooth(aes(col=Labels, lty=Labels), method="lm", se=FALSE, lwd=1) +
scale_x_continuous(name = "Exponent (Frontal)") +
scale_y_continuous(name = "Normalized Average (%)")+
scale_color_grey(start=0.0, end=0.4)+scale_fill_grey()+
theme_bw() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
#plot.background = element_rect(fill="grey10"),
#panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
strip.text = element_text(size=16),
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16, color="black"),  # X axis text
axis.text.y=element_text(size=16, color="black"),
legend.title=element_text(size=16, face = "bold"),
legend.text=element_text(size=16),  # X axis text
legend.position = "none")
# Figure 3B: Coding
fig3B <- ggplot(data = BEHAVIOR, aes(x = Exponent, y = coding)) +
geom_point(aes(fill=Labels), col="black", pch = 21, size = 2) +
stat_smooth(aes(col=Labels, lty=Labels), method="lm", se=FALSE, lwd=1) +
scale_color_grey(start=0.0, end=0.4)+scale_fill_grey()+
scale_x_continuous(name = "Exponent (Frontal)") +
scale_y_continuous(name = "Coding Score")+
theme_bw() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
#plot.background = element_rect(fill="grey10"),
#panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
strip.text = element_text(size=16),
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16, color="black"),  # X axis text
axis.text.y=element_text(size=16, color="black"),
legend.title=element_text(size=16, face = "bold"),
legend.text=element_text(size=16),  # X axis text
legend.position = "none")
# Figure 3C: List Recall
fig3C <- ggplot(data = BEHAVIOR, aes(x = Exponent, y = list_rec)) +
geom_point(aes(fill=Labels), col="black", pch = 21, size = 2) +
stat_smooth(aes(col=Labels, lty=Labels), method="lm", se=FALSE, lwd=1) +
scale_x_continuous(name = "Exponent (Frontal)") +
scale_y_continuous(name = "List Recall Score")+
scale_color_grey(start=0.0, end=0.4)+scale_fill_grey()+
theme_bw() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
#plot.background = element_rect(fill="grey10"),
#panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
strip.text = element_text(size=16),
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16, color="black"),  # X axis text
axis.text.y=element_text(size=16, color="black"),
legend.title=element_text(size=16, face = "bold"),
legend.text=element_text(size=16),  # X axis text
legend.position = "none")
# Figure 3D: List Recognition
fig3D <- ggplot(data = BEHAVIOR, aes(x = Exponent, y = list_recog)) +
geom_point(aes(fill=Labels), col="black", pch = 21, size = 2) +
stat_smooth(aes(col=Labels, lty=Labels), method="lm", se=FALSE, lwd=1) +
scale_x_continuous(name = "Exponent (Frontal)") +
scale_y_continuous(name = "List Recognition Score")+
scale_color_grey(start=0.0, end=0.4)+scale_fill_grey()+
theme_bw() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
#plot.background = element_rect(fill="grey10"),
#panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
strip.text = element_text(size=16),
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16, color="black"),  # X axis text
axis.text.y=element_text(size=16, color="black"),
legend.title=element_text(size=16, face = "bold"),
legend.text=element_text(size=16),  # X axis text
legend.position = "none")
# Figure 3E: Figure Recall
fig3E <- ggplot(data = BEHAVIOR, aes(x = Exponent, y = fig_rec)) +
geom_point(aes(fill=Labels), col="black", pch = 21, size = 2) +
stat_smooth(aes(col=Labels, lty=Labels), method="lm", se=FALSE, lwd=1) +
scale_x_continuous(name = "Exponent (Frontal)") +
scale_y_continuous(name = "List Recognition Score")+
scale_color_grey(start=0.0, end=0.4)+scale_fill_grey()+
theme_bw() +
theme(plot.title=element_text(size=15,
face="bold",
hjust=0.5,
lineheight=1.2),  # title
#plot.background = element_rect(fill="grey10"),
#panel.background = element_rect(fill="grey20"),
plot.caption=element_text(size=16, face = "bold"),  # caption
strip.text = element_text(size=16),
axis.title.x=element_text(size=16, face = "bold"),  # X axis title
axis.title.y=element_text(size=16, face = "bold"),  # Y axis title
axis.text.x=element_text(size=16, color="black"),  # X axis text
axis.text.y=element_text(size=16, color="black"),
legend.title=element_text(size=16, face = "bold"),
legend.text=element_text(size=16),  # X axis text
legend.position = "none")
(fig3A|fig3B|fig3C)
(fig3D|fig3E)
# Removing the MCI subjects before statistical analysis:
NO_MCI <- subset(BEHAVIOR, group!="MC")
summary(NO_MCI$group)
# Y ~ X
mod1 <- lm(raw_ave~group,
data=NO_MCI[NO_MCI$raw_ave!="NA",])
summary(mod1)
# M ~ X
mod2 <- lm(Exponent~group,
data=NO_MCI[NO_MCI$raw_ave!="NA",])
summary(mod2)
# Y ~ X + M
mod3 <- lm(raw_ave~group+Exponent,
data=NO_MCI[NO_MCI$raw_ave!="NA",])
summary(mod3)
# Bootstrapping Mediation Analysis:
set.seed(1)
raw_ave.med.result<- mediate(model.m=mod2, model.y=mod3,
treat='group', mediator='Exponent',
boot=TRUE, sims=5000)
summary(raw_ave.med.result)
# Y ~ X
mod1 <- lm(coding~group,
data=NO_MCI[NO_MCI$coding!="NA",])
summary(mod1)
# M ~ X
mod2 <- lm(Exponent~group,
data=NO_MCI[NO_MCI$coding!="NA",])
summary(mod2)
# Y ~ X + M
mod3 <- lm(coding~group+Exponent,
data=NO_MCI[NO_MCI$coding!="NA",])
summary(mod3)
# Bootstrapping Mediation Analysis:
set.seed(1)
coding.med.result<- mediate(model.m=mod2, model.y=mod3,
treat='group', mediator='Exponent',
boot=TRUE, sims=5000)
summary(coding.med.result)
plot(coding.med.result)
